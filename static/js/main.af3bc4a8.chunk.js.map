{"version":3,"sources":["Components/Header/navbar.jsx","Components/Gmaps/Gmap_Container.jsx","Components/Header/Profil.jsx","Components/Header/ProfilInfo.jsx","Components/Header/SkrivUt.jsx","Components/Header/brukerinfo.jsx","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","SimpleContainer","Profil","this","renderArray","state","respons","text","navneListe","eventer","componentDidMount","e","skrivUt","handleSubmit","length","map","item","key","Bnr","Fornavn","Email","funksjonsnavn","tabell","kollonen","verdien","where","axios","method","url","params","timeout","then","res","setState","data","console","log","catch","err","error","skrivUtAlt","Component","useStyles","small","large","info","boxShadow","shadows","BrukerInfo","classes","modal","trigger","Avatar","alt","src","className","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af3bc4a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SimpleModal from \"./bruker\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Søk\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap />\r\n          <SimpleModal />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nfunction SimpleContainer() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            <Container maxWidth=\"max\">\n                <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '50vh' }} >\n                    <h1>Google maps </h1>\n                </Typography>\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default SimpleContainer;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProfilInfo from \"./ProfilInfo\";\r\n\r\nclass Profil extends ProfilInfo {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderArray()}\r\n        <p>{this.state.respons}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import React, { Component } from \"react\";\r\nimport SkrivUt from \"./SkrivUt\";\r\n\r\nexport default class ProfilInfo extends SkrivUt {\r\n  state = {\r\n    text: \"\",\r\n    respons: \"\",\r\n    navneListe: [],\r\n    eventer: []\r\n  };\r\n\r\n  componentDidMount = e => {\r\n    var sammen = \"'\" + \"Bø\" + \"'\";\r\n    this.skrivUt(\"søkEtter\", \"brukere\", \"Sted_ByNavn\", sammen, \"\");\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    var sammen = \"'\" + \"Bø\" + \"'\";\r\n  };\r\n\r\n  renderArray = () => {\r\n    if (this.state.navneListe.length > 0) {\r\n      return this.state.navneListe.map(item => {\r\n        return (\r\n          <p key={item.Bnr}>\r\n            Navn: {item.Fornavn}\r\n            <br></br>\r\n            Epost: {item.Email}\r\n          </p>\r\n        );\r\n      });\r\n    } else return <p>Ingen treff!</p>;\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class SkrivUt extends Component {\r\n  skrivUt = (funksjonsnavn, tabell, kollonen, verdien, where) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"https://boeventsphp.000webhostapp.com/\",\r\n      params: {\r\n        funksjonsnavn,\r\n        tabell,\r\n        kollonen,\r\n        verdien,\r\n        where\r\n      },\r\n      timeout: 5000\r\n    })\r\n      .then(res => {\r\n        this.setState({ navneListe: res.data });\r\n        console.log(res);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  skrivUtAlt = (funksjonsnavn, tabell, kollonen, verdien, where) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"https://boeventsphp.000webhostapp.com/\",\r\n      params: {\r\n        funksjonsnavn,\r\n        tabell,\r\n        kollonen,\r\n        verdien,\r\n        where\r\n      },\r\n      timeout: 5000\r\n    })\r\n      .then(res => {\r\n        this.setState({ eventer: res.data });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Profil from \"./Profil\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3)\r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20)\r\n  },\r\n  info: {\r\n    borderRadius: \"25px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3)\r\n  }\r\n}));\r\n\r\nexport default function BrukerInfo() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Popup\r\n      modal\r\n      trigger={\r\n        <Avatar\r\n          alt=\"Naruto\"\r\n          src=\"https://static3.cbrimages.com/wordpress/wp-content/uploads/2020/01/Naruto.jpg\"\r\n          className={classes.large}\r\n        />\r\n      }\r\n    >\r\n      <div className={classes.info}>\r\n        <p>Info: </p>\r\n        <Profil />\r\n      </div>\r\n    </Popup>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchAppBar from \"./Components/Header/navbar\";\nimport Gmaps_Container from \"./Components/Gmaps/Gmap_Container\";\nimport Profil from \"./Components/Header/Profil\";\nimport BrukerInfo from \"./Components/Header/brukerinfo\";\n\nfunction App() {\n  return (\n    <div>\n      <BrukerInfo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}